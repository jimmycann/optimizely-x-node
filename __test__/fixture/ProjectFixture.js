const faker = require('faker')
const Joi = require('Joi')
const Schema = require('../../lib/services/Schema')

const WEB_SNIPPET = Joi.object().keys({
  enable_force_variation: Joi.boolean(),
  exclude_disabled_experiments: Joi.boolean(),
  exclude_names: Joi.boolean(),
  include_jquery: Joi.boolean(),
  ip_anonymization: Joi.boolean(),
  ip_filter: Joi.string().max(1500),
  library: Joi.valid('jquery-1.11.3-trim', 'jquery-1.11.3-full', 'jquery-1.6.4-trim', 'jquery-1.6.4-full', 'none'),
  project_javascript: Joi.string(),
  code_revision: Joi.number(),
  js_file_size: Joi.number()
})

const RES_SCHEMA = Joi.object().keys({
  name: Joi.string().required(),
  confidence_threshold: Joi.number(),
  dcp_service_id: Joi.number().integer(),
  platform: Joi.valid('web', 'ios', 'android', 'custom'),
  sdks: Joi.array().items(Joi.string()),
  status: Joi.valid('active', 'archived'),
  web_snippet: WEB_SNIPPET,
  account_id: Joi.number(),
  created: Joi.date(),
  id: Joi.number(),
  is_classic: Joi.boolean(),
  last_modified: Joi.date(),
  socket_token: Joi.string()
})

module.exports = {
  new: function (payload) {
    return Object.assign({
      name: faker.company.companyName(),
      confidence_threshold: 0.9,
      platform: 'web',
      sdks: [],
      status: 'active',
      web_snippet: this.newWebSnippet({})
    }, payload)
  },

  newWebSnippet: function (payload) {
    return Object.assign({
      enable_force_variation: false,
      exclude_disabled_experiments: false,
      exclude_names: true,
      include_jquery: true,
      ip_anonymization: false,
      library: 'jquery-1.11.3-trim',
      project_javascript: `alert('this is a test generated by github.com/yjimk/optimizely-x-node')`
    }, payload)
  },

  validate: function (payload, context = {}) {
    return Schema.validate(RES_SCHEMA, payload, context)
  },

  validateBulk: function (payload, context = {}) {
    return Schema.validate(Joi.array().items(RES_SCHEMA).min(1), payload, context)
  }
}
